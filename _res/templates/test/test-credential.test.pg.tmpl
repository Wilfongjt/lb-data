\c [[db-prefix]]_db

select '##### Credential TESTS';
BEGIN;
SELECT plan(2);

--SELECT
-- credential(TEXT,TEXT)
-- credential(_token, email)


select '###### Credential Select';

select '###### * good token, good user, good password, dont know how to test this!';

select '###### * bad token, bad user, bad password';
SELECT is(
  [[db-prefix]]_schema.credential(
    sign(
      '{"username":"guest@[[db-prefix]].com","role":"xxxguest"}'::json,current_setting('app.jwt_secret')
    ),
    'bad@[[db-prefix]].com'::TEXT,
    'x1X1xxxx'::TEXT
  ),
  '{"result":-1}'::TEXT,
  'credential bad@[[db-prefix]].com not found SELECT')::TEXT;

select '###### * good token, bad user, bad password';
SELECT is(
  [[db-prefix]]_schema.credential(
    sign(
      '{"username":"guest@[[db-prefix]].com","role":"guest"}'::json,current_setting('app.jwt_secret')
    ),
    'bad@[[db-prefix]].com'::TEXT,
    'x1X1xxxx'::TEXT
  ),
  '{"result":-2}'::TEXT,
  'credential bad@[[db-prefix]].com not found SELECT')::TEXT;

select '###### * good token, good user, bad password';

SELECT is(
  [[db-prefix]]_schema.credential(
    sign(
      '{"username":"guest@[[db-prefix]].com","role":"guest"}'::json,current_setting('app.jwt_secret')
    ),
    'guest@[[db-prefix]].com'::TEXT,
    'x1X1xxxx'::TEXT
  ),
  '{"result":-2}'::TEXT,
  'credential guest@[[db-prefix]].com not found SELECT')::TEXT;

-- UPDATE
-- usr_id value isnt predictable
-- update credential
-- credential(TEXT, int, TEXT,TEXT)

select '###### Credential User';
select '###### Credential User Update';

SELECT is(
  [[db-prefix]]_schema.credential(
    sign('{"username":"guest@[[db-prefix]].com","role":"guest"}'::json,current_setting('app.jwt_secret')),
    1,
    'guest@[[db-prefix]].com',
    '[[LB_WEB_GUEST_PASSWORD]]'::TEXT
  ),
  '{"result":1}',
  'Credential guest@[[db-prefix]].com UPDATE'
);

SELECT * FROM finish();
select '##### Credential TESTS Done';

ROLLBACK;
