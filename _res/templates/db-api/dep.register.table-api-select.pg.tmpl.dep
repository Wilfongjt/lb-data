\c [[LB_DB_PREFIX]]_db

--------------------------------------------
-- credential
-- Select AKA signin
-- logged in version
---------
-- [[api-name]](TEXT,int,TEXT,TEXT)
-- change while logged in
CREATE OR REPLACE FUNCTION
[[LB_DB_PREFIX]]_schema.[[api-name]](_token TEXT, username TEXT, password TEXT) RETURNS TEXT
AS $$

  DECLARE rc TEXT;
  DECLARE payload TEXT;
  DECLARE secret varchar(500);
BEGIN

  -- requires a valid token
  -- returns a user token given the anonymous token, users pw and un
  --
  -- bad token: unknown role or unknown user
  rc := '{"result":-1}';

  if [[LB_DB_PREFIX]]_schema.is_valid_token(_token, 'anonymous') then

    SELECT [[tbl-prefix]]_row || format('{"id": %s}',[[tbl-prefix]]_id)::jsonb
      into payload FROM [[LB_DB_PREFIX]]_schema.[[tbl-name]]
      WHERE [[tbl-prefix]]_email = lower(username)
      AND [[tbl-prefix]]_password = crypt(password, [[tbl-prefix]]_password);

    if FOUND then
      rc := format('{"token":"%s"}', sign(payload::json, current_setting('app.jwt_secret')));
    else
      -- username not found
      rc := '{"result":-2}';
    end if;
  end if;

  RETURN rc;

END;
$$ LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION
  [[LB_DB_PREFIX]]_schema.[[api-name]](
  TEXT, TEXT, TEXT
  ) TO anonymous;




